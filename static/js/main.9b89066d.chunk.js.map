{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","handleShuffleCards","id","alt","name","src","image","Wrapper","children","Title","Navbar","href","this","score","topscore","Component","App","state","friends","map","friendObject","clicked","_this","setState","sort","Math","random","_this2","components_Wrapper","components_Navbar","components_Title","friend","components_FriendCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"8uEAceA,MAXf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,mBAAmBN,EAAMO,MAClEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAAMI,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOJ,GAAIP,EAAMO,cCA5DK,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBCgBtBE,0LAfZ,OAEEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAKF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,KAAR,qCACJf,EAAAC,EAAAC,cAAA,mDACCF,EAAAC,EAAAC,cAAA,oBAAYc,KAAKjB,MAAMkB,MAAvB,KACAjB,EAAAC,EAAAC,cAAA,yBAAiBc,KAAKjB,MAAMmB,mBATnBC,cC+DPC,6MAvDbC,MAAQ,CACNC,UACAJ,SAAU,EACVD,MAAO,KAGTZ,mBAAqB,SAAAC,GAEnBgB,EAAQC,IAAI,SAAAC,GAEV,OAAIlB,IAAOkB,EAAalB,MACO,IAAzBkB,EAAaC,SAGfD,EAAaC,SAAU,EACvBC,EAAKC,SAAS,CAAEV,MAAOS,EAAKL,MAAMJ,MAAQ,EAAGC,SAAUQ,EAAKL,MAAMH,SAAW,EAAGI,aACxE,IAGRI,EAAKC,SAAS,CAACV,MAAO,KACf,MAObK,EAAQM,KAAK,kBAAMC,KAAKC,SAAW,8EAM5B,IAAAC,EAAAf,KACP,OACEhB,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,CACEhB,MAAOD,KAAKK,MAAMJ,MAClBC,SAAUF,KAAKK,MAAMH,WAEvBlB,EAAAC,EAAAC,cAACgC,EAAD,iDACClB,KAAKK,MAAMC,QAAQC,IAAI,SAAAY,GAAM,OAC5BnC,EAAAC,EAAAC,cAACkC,EAAD,CACE/B,mBAAoB0B,EAAK1B,mBACzBC,GAAI6B,EAAO7B,GACX+B,IAAKF,EAAO7B,GACZE,KAAM2B,EAAO3B,KACbE,MAAOyB,EAAOzB,kBAjDRS,mBCJlBmB,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9b89066d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.handleShuffleCards(props.id)} >\r\n      <div className=\"img-container\">\r\n        <img className= \"img\" alt={props.name} src={props.image} id={props.id} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass  Navbar extends Component {\r\n  render() {\r\n    return (\r\n  \r\n      <div className=\"navbar\">\r\n          <ul>\r\n           <li ><a href=\"/\"> Pokémon Edition Clicky Game </a></li>\r\n            <li >Do NOT click on the same image Twice!</li>\r\n             <li> Score:{this.props.score} </li>\r\n             <li> Top Score: {this.props.topscore}</li>\r\n          </ul>\r\n         </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default  Navbar;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    topscore: 0,\r\n    score: 0\r\n  };\r\n\r\n  handleShuffleCards = id => {\r\n\r\n    friends.map(friendObject => {\r\n\r\n      if (id === friendObject.id) {\r\n        if (friendObject.clicked === false) {\r\n\r\n          // alert(\"found false\");\r\n          friendObject.clicked = true;\r\n          this.setState({ score: this.state.score + 1, topscore: this.state.topscore + 1, friends });\r\n          return  false;\r\n        }\r\n        else {\r\n          this.setState({score: 0});\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return  true;\r\n\r\n    });\r\n    friends.sort(() => Math.random() - 0.5);\r\n    \r\n\r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar\r\n          score={this.state.score}\r\n          topscore={this.state.topscore}\r\n        />\r\n        <Title>Pokémon-Clicky-Game (Characters List)</Title>\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            handleShuffleCards={this.handleShuffleCards}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}